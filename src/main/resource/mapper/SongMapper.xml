<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="netonemusic.com.dao.SongMapper">
  <resultMap id="BaseResultMap" type="netonemusic.com.entity.Song">
    <!--@mbg.generated-->
    <id column="song_id" jdbcType="INTEGER" property="songId" />
    <result column="song_name" jdbcType="VARCHAR" property="songName" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="cd_id" jdbcType="INTEGER" property="cdId" />
    <result column="song_url" jdbcType="VARCHAR" property="songUrl" />
    <result column="song_type" jdbcType="VARCHAR" property="songType" />
    <result column="song_language" jdbcType="VARCHAR" property="songLanguage" />
    <result column="song_lyrics" jdbcType="VARCHAR" property="songLyrics" />
    <result column="play_count" jdbcType="INTEGER" property="playCount" />
    <result column="song_time" jdbcType="INTEGER" property="songTime" />
    <result column="publish_date" jdbcType="DATE" property="publishDate" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    song_id, song_name, singer_id, cd_id, song_url, song_type, song_language, song_lyrics, 
    play_count, song_time, publish_date, comment_count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from song
    where song_id = #{songId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from song
    where song_id = #{songId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="song_id" keyProperty="songId" parameterType="netonemusic.com.entity.Song" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into song (song_name, singer_id, cd_id, 
      song_url, song_type, song_language, 
      song_lyrics, play_count, song_time, 
      publish_date, comment_count)
    values (#{songName,jdbcType=VARCHAR}, #{singerId,jdbcType=INTEGER}, #{cdId,jdbcType=INTEGER}, 
      #{songUrl,jdbcType=VARCHAR}, #{songType,jdbcType=VARCHAR}, #{songLanguage,jdbcType=VARCHAR}, 
      #{songLyrics,jdbcType=VARCHAR}, #{playCount,jdbcType=INTEGER}, #{songTime,jdbcType=INTEGER}, 
      #{publishDate,jdbcType=DATE}, #{commentCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="song_id" keyProperty="songId" parameterType="netonemusic.com.entity.Song" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="songName != null">
        song_name,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="cdId != null">
        cd_id,
      </if>
      <if test="songUrl != null">
        song_url,
      </if>
      <if test="songType != null">
        song_type,
      </if>
      <if test="songLanguage != null">
        song_language,
      </if>
      <if test="songLyrics != null">
        song_lyrics,
      </if>
      <if test="playCount != null">
        play_count,
      </if>
      <if test="songTime != null">
        song_time,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="songName != null">
        #{songName,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="cdId != null">
        #{cdId,jdbcType=INTEGER},
      </if>
      <if test="songUrl != null">
        #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songType != null">
        #{songType,jdbcType=VARCHAR},
      </if>
      <if test="songLanguage != null">
        #{songLanguage,jdbcType=VARCHAR},
      </if>
      <if test="songLyrics != null">
        #{songLyrics,jdbcType=VARCHAR},
      </if>
      <if test="playCount != null">
        #{playCount,jdbcType=INTEGER},
      </if>
      <if test="songTime != null">
        #{songTime,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="netonemusic.com.entity.Song">
    <!--@mbg.generated-->
    update song
    <set>
      <if test="songName != null">
        song_name = #{songName,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="cdId != null">
        cd_id = #{cdId,jdbcType=INTEGER},
      </if>
      <if test="songUrl != null">
        song_url = #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songType != null">
        song_type = #{songType,jdbcType=VARCHAR},
      </if>
      <if test="songLanguage != null">
        song_language = #{songLanguage,jdbcType=VARCHAR},
      </if>
      <if test="songLyrics != null">
        song_lyrics = #{songLyrics,jdbcType=VARCHAR},
      </if>
      <if test="playCount != null">
        play_count = #{playCount,jdbcType=INTEGER},
      </if>
      <if test="songTime != null">
        song_time = #{songTime,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
    </set>
    where song_id = #{songId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="netonemusic.com.entity.Song">
    <!--@mbg.generated-->
    update song
    set song_name = #{songName,jdbcType=VARCHAR},
      singer_id = #{singerId,jdbcType=INTEGER},
      cd_id = #{cdId,jdbcType=INTEGER},
      song_url = #{songUrl,jdbcType=VARCHAR},
      song_type = #{songType,jdbcType=VARCHAR},
      song_language = #{songLanguage,jdbcType=VARCHAR},
      song_lyrics = #{songLyrics,jdbcType=VARCHAR},
      play_count = #{playCount,jdbcType=INTEGER},
      song_time = #{songTime,jdbcType=INTEGER},
      publish_date = #{publishDate,jdbcType=DATE},
      comment_count = #{commentCount,jdbcType=INTEGER}
    where song_id = #{songId,jdbcType=INTEGER}
  </update>
  <select id="findListSong" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from song
    where song_id in (select song_id from songlistwithsong where songList_id=#{songlistId,jdbcType=INTEGER})
  </select>

<!--auto generated by MybatisCodeHelper on 2019-08-31-->
  <select id="findFirst54rderByPlayCountDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from song order by play_count desc limit 54
    </select>
    <select id="findMySongRank" resultMap="BaseResultMap">
        select * from song where song_id in (select song_id from userwithsong where user_id=#{userId,jdbcType=VARCHAR} order by play_count desc );
    </select>
  <select id="findSingerSong" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
   from song where song_id in (select song_id from songwithsinger where song.singer_id=#{singerId,jdbcType=VARCHAR})order by play_count desc limit 50
  </select>
  <select id="searchSong" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
   from song where song_name like '%${Keyword}%'
  </select>
  <delete id="deleteBySonglistIdAndSongId">
    delete from songlistwithsong
    where songList_id=#{songlistId,jdbcType=INTEGER} and song_id=#{songId,jdbcType=INTEGER}
  </delete>

</mapper>